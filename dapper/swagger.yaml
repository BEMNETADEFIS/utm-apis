---
swagger: "2.0"
info:
  description: "Data analyis provider for USS"
  version: "v2"
  
  title: "NASA UTM Data Analysis Provider (dapper)"
  contact:
    name: NASA Ames Research Center, Aviation Systems Division
    url: https://utm.arc.nasa.gov/
    email: joseph.rios@nasa.gov
  license:
    name: NASA Open Source Agreement
    url: https://ti.arc.nasa.gov/opensource/nosa/
  termsOfService: |

    A. No Warranty: THE SUBJECT SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY WARRANTY OF ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL CONFORM TO SPECIFICATIONS, ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR FREEDOM FROM INFRINGEMENT, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL BE ERROR FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF PROVIDED, WILL CONFORM TO THE SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN ANY MANNER, CONSTITUTE AN ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR RECIPIENT OF ANY RESULTS, RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR ANY OTHER APPLICATIONS RESULTING FROM USE OF THE SUBJECT SOFTWARE. FURTHER, GOVERNMENT AGENCY DISCLAIMS ALL WARRANTIES AND LIABILITIES REGARDING THIRD-PARTY SOFTWARE, IF PRESENT IN THE ORIGINAL SOFTWARE, AND DISTRIBUTES IT "AS IS."

    B. Waiver and Indemnity: RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS AGAINST THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT. IF RECIPIENT''S USE OF THE SUBJECT SOFTWARE RESULTS IN ANY LIABILITIES, DEMANDS, DAMAGES, EXPENSES OR LOSSES ARISING FROM SUCH USE, INCLUDING ANY DAMAGES FROM PRODUCTS BASED ON, OR RESULTING FROM, RECIPIENT''S USE OF THE SUBJECT SOFTWARE, RECIPIENT SHALL INDEMNIFY AND HOLD HARMLESS THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY LAW. RECIPIENT''S SOLE REMEDY FOR ANY SUCH MATTER SHALL BE THE IMMEDIATE, UNILATERAL TERMINATION OF THIS AGREEMENT.

host: utmalpha.arc.nasa.gov
basePath: /dapper
schemes:
- https
- wss

tags: # Have to add 'A' 'B' etc since ordering isn't respected in SwaggerUI.
- name: A. DAA Endpoints
  description: The primary RESTful endpoints for pushing data to be aggregated
  externalDocs:
    url: "https://tmiserver.arc.nasa.gov/dapper/api/"
    description: NASA dapper server generated from this API specification.
- name: B. DAP Endpoints
  description: Primary restful endpoints for accesssing aggregate data
- name: C. Data Types
  description: Psuedo endpoints used for the documentation of the data schema
- name: D. Version
  description: Get version

responses:
  WRONG_PROTOCOL:
    description: A RESTful call was made to this endpoint but this is not a REST endpoint. Do not use this endpoint for REST calls.

paths:
  /dataExchanges/operations:
  
    put:
      tags:
        - A. DAA Endpoints
      summary: Submit an Operation to Dapper. This is a PUT so it will update or create the operation via the gufi.
      security:
         - Bearer: []
      operationId: postOperationDataExchange
      description: Allows for the submission of data to dapper. Operations should be submitted whenever their state changes. This will override the record in storage and allow for streaming of operation changes in real time.

      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: operation_data_exchange
          description: Data exchange to add
          required: true
          schema:
            $ref: "#/definitions/DataExchangeOperation"
      responses:
        201:
          description: Data Exchange received.
          schema:
            $ref: "#/definitions/DapperApiResponse"
        400:
          description: "Bad request. Typically validation error. Fix your request and retry."
          schema:
            $ref: "#/definitions/DapperApiResponse"
        403:
          description: "Invalid ID supplied.  Fix authorization and retry."
          schema:
            $ref: "#/definitions/DapperApiResponse"
  
  /dataExchanges/operations/{gufi}:
    
    get:
      tags: 
        - B. DAP Endpoints
      summary: Get an Operation Data Exchange from dapper by the gufi.
      security: 
        - Bearer: []
      operationId: getOperationDataExchange
      produces: 
        - application/json
      parameters:
        - name: gufi
          in: path
          description: gufi of Operation DE to retrieve
          required: true
          type: string
          format: uuid
      responses: 
        200: 
          description: Operation exists
          schema: 
            $ref: "#definitions/DataExchangeOperation"
        404: 
          description: Operation not found
          schema:
            $ref: "#definitions/DapperApiResponse"
        403: 
          description: Invalid authentication
          schema:
            $ref: "#definitions/DapperApiResponse"
            
  /dataExchanges/positions:
    post:
      tags:
        - A. DAA Endpoints
      summary: Submit a Position to Dapper.
      security:
         - Bearer: []
      operationId: postPositionDataExchange
      description: Allows for the submission of data to dapper. 

      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: position_data_exchange
          description: Data exchange to add
          required: true
          schema:
            $ref: "#/definitions/DataExchangePosition"
      responses:
        201:
          description: Data Exchange received.
          schema:
            $ref: "#/definitions/DapperApiResponse"
        400:
          description: "Bad request. Typically validation error. Fix your request and retry."
          schema:
            $ref: "#/definitions/DapperApiResponse"
        403:
          description: "Invalid ID supplied.  Fix authorization and retry."
          schema:
            $ref: "#/definitions/DapperApiResponse"

  /dataExchanges/positions/{gufi}:
    
    get:
      tags: 
        - B. DAP Endpoints
      summary: Get all Position Data Exchanges from dapper by the gufi.
      security: 
        - Bearer: []
      operationId: getPositionsDataExchange
      produces: 
        - application/json
      parameters:
        - name: gufi
          in: path
          description: gufi of Positions DEs to retrieve
          required: true
          type: string
          format: uuid
      responses: 
        200: 
          description: Positions exist
          schema: 
            type: array
            items:
              $ref: "#definitions/DataExchangePosition"
        404: 
          description: Positions not found
          schema:
            $ref: "#definitions/DapperApiResponse"
        403: 
          description: Invalid authentication
          schema: 
            $ref: "#definitions/DapperApiResponse"          
            
  /dataExchanges/messages/alerts:
    post:
      tags:
        - A. DAA Endpoints
      summary: Submit an AlertMessage to Dapper.
      security:
         - Bearer: []
      operationId: postAlertMessageDataExchange
      description: Allows for the submission of data to dapper.

      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: alert_message_data_exchange
          description: Data exchange to add
          required: true
          schema:
            $ref: "#/definitions/DataExchangeAlertMessage"
      responses:
        201:
          description: Data Exchange received.
          schema:
            $ref: "#/definitions/DapperApiResponse"
        400:
          description: "Bad request. Typically validation error. Fix your request and retry."
          schema:
            $ref: "#/definitions/DapperApiResponse"
        403:
          description: "Invalid ID supplied.  Fix authorization and retry."
          schema:
            $ref: "#/definitions/DapperApiResponse"

  /dataExchanges/messages/alerts/{gufi}:
    
    get:
      tags: 
        - B. DAP Endpoints
      summary: Get all Alert Message Data Exchanges from dapper by the gufi.
      security: 
        - Bearer: []
      operationId: getAlertMessagesDataExchange
      produces: 
        - application/json
      parameters:
        - name: gufi
          in: path
          description: gufi of Alert Message DEs to retrieve
          required: true
          type: string
          format: uuid
      responses: 
        200: 
          description: Alert Messages exist
          schema: 
            type: array
            items:
              $ref: "#definitions/DataExchangeAlertMessage"
        404: 
          description: Alert Messages not found
          schema:
            $ref: "#definitions/DapperApiResponse"
        403: 
          description: Invalid authentication
          schema: 
            $ref: "#definitions/DapperApiResponse"           
            
  /dataExchanges/messages/informs:
    post:
      tags:
        - A. DAA Endpoints
      summary: Submit an InformMessage to Dapper.
      security:
         - Bearer: []
      operationId: postInformMessageDataExchange
      description: Allows for the submission of data to dapper.

      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: inform_message_data_exchange
          description: Data exchange to add
          required: true
          schema:
            $ref: "#/definitions/DataExchangeInformMessage"
      responses:
        201:
          description: Data Exchange received.
          schema:
            $ref: "#/definitions/DapperApiResponse"
        400:
          description: "Bad request. Typically validation error. Fix your request and retry."
          schema:
            $ref: "#/definitions/DapperApiResponse"
        403:
          description: "Invalid ID supplied.  Fix authorization and retry."
          schema:
            $ref: "#/definitions/DapperApiResponse" 

  /dataExchanges/messages/informs/{gufi}:
    
    get:
      tags: 
        - B. DAP Endpoints
      summary: Get all Inform Message Data Exchanges from dapper by the gufi.
      security: 
        - Bearer: []
      operationId: getInformMessagesDataExchange
      produces: 
        - application/json
      parameters:
        - name: gufi
          in: path
          description: gufi of Inform Message DEs to retrieve
          required: true
          type: string
          format: uuid
      responses: 
        200: 
          description: Inform Messages exist
          schema: 
            type: array
            items:
              $ref: "#definitions/DataExchangeInformMessage"
        404: 
          description: Inform Messages not found
          schema:
            $ref: "#definitions/DapperApiResponse"
        403: 
          description: Invalid authentication
          schema: 
            $ref: "#definitions/DapperApiResponse" 
  
  /dataExchanges/messages/intents:
    post:
      tags:
        - A. DAA Endpoints
      summary: Submit an IntentMessage to Dapper.
      security:
         - Bearer: []
      operationId: postIntentMessageDataExchange
      description: Allows for the submission of data to dapper.

      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: intent_message_data_exchange
          description: Data exchange to add
          required: true
          schema:
            $ref: "#/definitions/DataExchangeIntentMessage"
      responses:
        201:
          description: Data Exchange received.
          schema:
            $ref: "#/definitions/DapperApiResponse"
        400:
          description: "Bad request. Typically validation error. Fix your request and retry."
          schema:
            $ref: "#/definitions/DapperApiResponse"
        403:
          description: "Invalid ID supplied.  Fix authorization and retry."
          schema:
            $ref: "#/definitions/DapperApiResponse"

  /dataExchanges/messages/intents/{gufi}:
    
    get:
      tags: 
        - B. DAP Endpoints
      summary: Get all Intent Message Data Exchanges from dapper by the gufi.
      security: 
        - Bearer: []
      operationId: getIntentMessagesDataExchange
      produces: 
        - application/json
      parameters:
        - name: gufi
          in: path
          description: gufi of Intent Message DEs to retrieve
          required: true
          type: string
          format: uuid
      responses: 
        200: 
          description: Intent Messages exist
          schema: 
            type: array
            items:
              $ref: "#definitions/DataExchangeIntentMessage"
        404: 
          description: Intent Messages not found
          schema:
            $ref: "#definitions/DapperApiResponse"
        403: 
          description: Invalid authentication
          schema: 
            $ref: "#definitions/DapperApiResponse"           
            
  /dataExchanges/messages/constraints:
    post:
      tags:
        - A. DAA Endpoints
      summary: Submit a ConstraintMessage to Dapper.
      security:
         - Bearer: []
      operationId: postConstraintMessageDataExchange
      description: Allows for the submission of data to dapper.

      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: constraint_message_data_exchange
          description: Data exchange to add
          required: true
          schema:
            $ref: "#/definitions/DataExchangeConstraintMessage"
      responses:
        201:
          description: Data Exchange received.
          schema:
            $ref: "#/definitions/DapperApiResponse"
        400:
          description: "Bad request. Typically validation error. Fix your request and retry."
          schema:
            $ref: "#/definitions/DapperApiResponse"
        403:
          description: "Invalid ID supplied.  Fix authorization and retry."
          schema:
            $ref: "#/definitions/DapperApiResponse"

  /dataExchanges/messages/constraints/{gufi}:
    
    get:
      tags: 
        - B. DAP Endpoints
      summary: Get all Constraint Message Data Exchanges from dapper by the gufi.
      security: 
        - Bearer: []
      operationId: getConstraintMessagesDataExchange
      produces: 
        - application/json
      parameters:
        - name: gufi
          in: path
          description: gufi of Constraint Message DEs to retrieve
          required: true
          type: string
          format: uuid
      responses: 
        200: 
          description: Constraint Messages exist
          schema: 
            type: array
            items:
              $ref: "#definitions/DataExchangeConstraintMessage"
        404: 
          description: Constraint Messages not found
          schema:
            $ref: "#definitions/DapperApiResponse"
        403: 
          description: Invalid authentication
          schema: 
            $ref: "#definitions/DapperApiResponse"           
            
  /schema/Operation:
    get:
      tags:
        - C. Data Types
      summary: Operation schema
      description: |
        Illustrates an operation in JSON. This endpoint is not intended for use.

        Note that if you are viewing this in a SwaggerUI, the "try it out" feature will not work since this is not a RESTful endpoint.
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Operation"
        410:
          $ref: "#/responses/WRONG_PROTOCOL"
          
  /schema/Position: 
    get:
      tags: 
        - C. Data Types
      summary: Position schema
      description: | 
        Illustrates a Position in JSON. This endpoint is not intended for use.
        
        Note that if you are viewing this in a SwaggerUI, the "try it out" feature will not work since this is not a RESTful endpoint.
      produces:
        - application/json
      responses: 
        200:
          description: OK
          schema: 
            $ref: '#/definitions/Position'
        410: 
          $ref: '#/responses/WRONG_PROTOCOL'

  /schema/Point:
    get:
      tags:
       - C. Data Types
      summary: Point schema
      description: |
        Illustrates an Point in JSON. This endpoint is not intended for use.

        Note that if you are viewing this in a SwaggerUI, the "try it out" feature will not work since this is not a RESTful endpoint.
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Point"
        410:
          $ref: "#/responses/WRONG_PROTOCOL"

  /schema/LineString:
    get:
      tags:
        - C. Data Types
      summary: LineString schema
      description: |
        Illustrates an LineString in JSON. This endpoint is not intended for use.

        Note that if you are viewing this in a SwaggerUI, the "try it out" feature will not work since this is not a RESTful endpoint.
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LineString"
        410:
          $ref: "#/responses/WRONG_PROTOCOL"

  /schema/Polygon:
    get:
      tags:
        - C. Data Types
      summary: Polygon schema
      description: |
        Illustrates an Polygon in JSON. This endpoint is not intended for use.

        Note that if you are viewing this in a SwaggerUI, the "try it out" feature will not work since this is not a RESTful endpoint.

      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Polygon"
        410:
          $ref: "#/responses/WRONG_PROTOCOL"

  /schema/InformMessage:
    get:
      tags:
        - C. Data Types
      summary: Inform Message schema
      description: |
        Illustrates the Dapper Inform Message. This is Dapper' reply to an Intent. This endpoint is not intended for use.

        Note that if you are viewing this in a SwaggerUI, the "try it out" feature will not work since this is not a RESTful endpoint.
      operationId: informMsgUsingGET
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/InformMessage"
        410:
          $ref: "#/responses/WRONG_PROTOCOL"

  /schema/IntentMessage:
    get:
      tags:
        - C. Data Types
      summary: Intent Message schema
      description: |
        Illustrates the Dapper Intent Message. Your Intent generates a Dapper Inform. This endpoint is not intended for use.

        Note that if you are viewing this in a SwaggerUI, the "try it out" feature will not work since this is not a RESTful endpoint.
      operationId: intentMsgUsingGET
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/IntentMessage"
        410:
          $ref: "#/responses/WRONG_PROTOCOL"

  /schema/AlertMessage:
    get:
      tags:
        - C. Data Types
      summary: Alert Message schema
      description: |
        Illustrates the Dapper Alert Message. Dapper may send out Alert Messages from time to time. This endpoint is not intended for use.

        Note that if you are viewing this in a SwaggerUI, the "try it out" feature will not work since this is not a RESTful endpoint
      operationId: alertMsgUsingGET
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/AlertMessage"
        410:
          $ref: "#/responses/WRONG_PROTOCOL"

  /schema/ConstraintMessage:
    get:
      tags:
        - C. Data Types
      summary: Constraint Message schema
      description: |
        Illustrates the Dapper Constraint Message. Dapper will send out a Constraint Message when a new constraint is put in place. This endpoint is not intended for use.

        Note that if you are viewing this in a SwaggerUI, the "try it out" feature will not work since this is not a RESTful endpoint
      operationId: constraintMsgUsingGET
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ConstraintMessage"
        410:
          $ref: "#/responses/WRONG_PROTOCOL"

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:

  DapperApiResponse:
    type: "object"
    properties:
      status:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
    example:
      status: 201
      type: CREATED
      message: Data exchange received.
      
  DataExchangeOperation:
    type: object
    required: 
    - gufi
    - operation
    - api_version
    - source
    - destination
    - type
    properties: 
      gufi: 
        description: > 
          This is the gufi for the operation that this particular data exchange is regarding. All loggable data exchanges should contain a gufi.
        type: string
        format: uuid
      operation: 
        $ref: '#/definitions/Operation'
      api_version:
        description: >
          A string representing which version of the USS API spec this data exchange was designed for. Used to help distinguish historical data.
        type: string
      source: 
        description: >
          A string representing the unique entity url (or the user id in the case of the operator) of the source. This must be a way to uniquely identify the source of the data exchange. Ie. if a USS sends a message to the operator the source would be the url of the USS
        type: string
      destination: 
        description: > 
          A string representing the unique entity url (or user_id in the operators case) of the destination. This must be a way to uniquely identify the destination of the data exchange. Ie. if a USS sends a message to the operator the destination would be the url of the Operator
        type: string  
      type: 
        description: > 
          The type of DataExchange. Should be operation
        type: string
        default: operation
          
  DataExchangePosition:
    type: object
    required: 
    - gufi
    - position
    - api_version
    - source
    - destination
    - type
    properties: 
      gufi: 
        description: > 
          This is the gufi for the operation that this particular data exchange is regarding. All loggable data exchanges should contain a gufi.
        type: string
        format: uuid
      position: 
        $ref: '#/definitions/Position'
      api_version:
        description: >
          A string representing which version of the USS API spec this data exchange was designed for. Used to help distinguish historical data.
        type: string
      source: 
        description: >
          A string representing the unique entity url (or the user id in the case of the operator) of the source. This must be a way to uniquely identify the source of the data exchange. Ie. if a USS sends a message to the operator the source would be the url of the USS
        type: string
      destination: 
        description: > 
          A string representing the unique entity url (or user_id in the operators case) of the destination. This must be a way to uniquely identify the destination of the data exchange. Ie. if a USS sends a message to the operator the destination would be the url of the Operator  
        type: string
      type: 
        description: > 
          The type of DataExchange. Should be position
        type: string
        default: position
        
  DataExchangeAlertMessage:
    type: object
    required: 
    - gufi
    - alert_message
    - api_version
    - source
    - destination
    - type
    properties: 
      gufi: 
        description: > 
          This is the gufi for the operation that this particular data exchange is regarding. All loggable data exchanges should contain a gufi. 
        type: string
        format: uuid
      alert_message: 
        $ref: '#/definitions/AlertMessage'
      api_version:
        description: >
          A string representing which version of the USS API spec this data exchange was designed for. Used to help distinguish historical data.
        type: string
      source: 
        description: >
          A string representing the unique entity url (or the user id in the case of the operator) of the source. This must be a way to uniquely identify the source of the data exchange. Ie. if a USS sends a message to the operator the source would be the url of the USS
        type: string
      destination: 
        description: > 
          A string representing the unique entity url (or user_id in the operators case) of the destination. This must be a way to uniquely identify the destination of the data exchange. Ie. if a USS sends a message to the operator the destination would be the url of the Operator
        type: string
      type: 
        description: > 
          The type of DataExchange. Should be alert_message
        type: string
        default: alert_message
        
  DataExchangeInformMessage:
    type: object
    required: 
    - gufi
    - inform_message
    - api_version
    - source
    - destination
    - type
    properties: 
      gufi: 
        description: > 
          This is the gufi for the operation that this particular data exchange is regarding. All loggable data exchanges should contain a gufi. 
        type: string
        format: uuid
      inform_message: 
        $ref: '#/definitions/InformMessage'
      api_version:
        description: >
          A string representing which version of the USS API spec this data exchange was designed for. Used to help distinguish historical data.
        type: string
      source: 
        description: >
          A string representing the unique entity url (or the user id in the case of the operator) of the source. This must be a way to uniquely identify the source of the data exchange. Ie. if a USS sends a message to the operator the source would be the url of the USS
        type: string
      destination: 
        description: > 
          A string representing the unique entity url (or user_id in the operators case) of the destination. This must be a way to uniquely identify the destination of the data exchange. Ie. if a USS sends a message to the operator the destination would be the url of the Operator
        type: string
      type: 
        description: > 
          The type of DataExchange. Should be inform_message
        type: string
        default: inform_message
        
  DataExchangeIntentMessage:
    type: object
    required: 
    - gufi
    - intent_message
    - api_version
    - source
    - destination
    - type
    properties: 
      gufi: 
        description: > 
          This is the gufi for the operation that this particular data exchange is regarding. All loggable data exchanges should contain a gufi.
        type: string
        format: uuid
      intent_message: 
        $ref: '#/definitions/IntentMessage'
      api_version:
        description: >
          A string representing which version of the USS API spec this data exchange was designed for. Used to help distinguish historical data.
        type: string
      source: 
        description: >
          A string representing the unique entity url (or the user id in the case of the operator) of the source. This must be a way to uniquely identify the source of the data exchange. Ie. if a USS sends a message to the operator the source would be the url of the USS
        type: string
      destination: 
        description: > 
          A string representing the unique entity url (or user_id in the operators case) of the destination. This must be a way to uniquely identify the destination of the data exchange. Ie. if a USS sends a message to the operator the destination would be the url of the Operator
        type: string
      type: 
        description: > 
          The type of DataExchange. Should be intent_message
        type: string
        default: intent_message
          
  DataExchangeConstraintMessage:
    type: object
    required: 
    - gufi
    - constraint_message
    - api_version
    - source
    - destination
    - type
    properties: 
      gufi: 
        description: > 
          This is the gufi for the operation that this particular data exchange is regarding. All loggable data exchanges should contain a gufi.
        type: string
        format: uuid
      constraint_message: 
        $ref: '#/definitions/ConstraintMessage'
      api_version:
        description: >
          A string representing which version of the USS API spec this data exchange was designed for. Used to help distinguish historical data.
        type: string
      source: 
        description: >
          A string representing the unique entity url (or the user id in the case of the operator) of the source. This must be a way to uniquely identify the source of the data exchange. Ie. if a USS sends a message to the operator the source would be the url of the USS
        type: string
      destination: 
        description: > 
          A string representing the unique entity url (or user_id in the operators case) of the destination. This must be a way to uniquely identify the destination of the data exchange. Ie. if a USS sends a message to the operator the destination would be the url of the Operator
        type: string
      type: 
        description: > 
          The type of DataExchange. Should be constraint_message
        type: string
        default: constraint_message
        
  Operation:
    type: object
    required:
    - gufi
    - registration
    - primary_contact_name
    - primary_contact_phone
    - controller_location
    - operation_volumes
    properties:
      gufi:
        description: "Created and assigned by each USS (not FIMS). Validated as UUID version 4 specification."
        type: string
        format: uuid
      submit_time:
        description: "Time the operation submission was received by USS."
        type: string
        format: date-time
      decision_time:
        description: "A timestamp set by the USS any time the state of the operation is updated, for example when the flight goes from PROPOSING to ACCEPTED"
        type: string
        format: date-time
      aircraft_comments:
        description: "Informative text about the aircraft. Not used by the UTM System.  Only for human stakeholders."
        type: string
      flight_comments:
        description: "Informative text about the operation.  Not used by the UTM System.  Only for human stakeholders."
        type: string
      flight_geography_description:
        description: "Informative text about the operational geography.  Not used by the UTM System.  Only for human stakeholders."
        type: string
      registration:
        description: "The registration ID of the vehicle flying this operation. This registration value is provided to operators by a vehicle registrar. Validated as a non-null string. Note UTM System assumes a single vehicle per operation."
        type: string
      registration_detail:
        description: "See 'registrarion' field. This contains details such as the source of the registration ID."
        type: string
      flight_number:
        description: "Optional. May be useful to the operator for identification purposes."
        type: string
      user_id:
        description: "This field is populated based on the provided credentials."
        type: string
      created_by:
        description: "The user that created the operation."
        type: string
      primary_contact_name:
        description: "Not currently checked for validity, but clients should endeavor to provide useful, appropriate information in these fields. These values should represent the contact that should be used in case of an issue with the operation before, during, or after that operation."
        type: string
      primary_contact_phone:
        type: string
      primary_contact_email:
        type: string
      extra_contact_info:
        description: "Any additional contact information that may be useful (hours of availability, fax number, communication limitations, etc.)."
        type: string
      state:
        description: "The current state of the operation."
        type: string
      controller_location:
        # description: "The planned position of the UAS Controller during the operation. Assumed to be a static location."
        $ref: "#/definitions/Point"
      gcs_location:
        # description: "If not submitted, the UTM System will assume the GCS is co-located with the UAS Controller.  Assumed to be a static location."
        $ref: "#/definitions/Point"
      faa_rule:
        description: "Indication whether this operation is under Part 101-E, Part 107, Part 107 waiver, or a Part TBD.  Part TBD is a potential future rule that may cover operations such as those under test by UTM."
        type: string
        enum:
        - PART_107
        - PART_107W
        - PART_107X
        - PART_101E
        - PART_TBD
      waiver_certificate_number:
        description: "If a waiver has been obtained for the Part 107 rules, then the operator would have a waiver certificate number. For any operation submissions with faa_rule=PART_107W, this field is required."
        type: string
      priority_op:
        type: boolean
        default: false
        description: "If true this operation is managed as a priority operation."

      operation_volumes:
        description: "Editable. The actual geographical information for the operation."
        type: array
        items:
          $ref: "#/definitions/OperationVolume"
    example:
      gufi: "00000000-0000-4444-8888-000000000000"
      submit_time: "2016-10-04T09:15:40.727Z"
      decision_time: "2016-10-04T09:15:40.727Z"
      aircraft_comments: "Comments about the aircraft"
      flight_comments: "Comments about the flight"
      flight_geography_description: "A description of the geography"
      registration: "00000000-0000-4444-8888-000000000000"
      registration_detail: "src=federaldroneregistration.com,owner=acme"
      flight_number: "Flight number"
      user_id: "fimsUser"
      created_by: "fimsUser"
      primary_contact_name: "Jane Pilot"
      primary_contact_phone: "XXX-XXX-XXXX"
      primary_contact_email: "pilotjane@janepilot.com"
      extra_contact_info: "Fax: XXX-XXX-XXXX"
      state: A
      controller_location:
        type: Point
        coordinates: [-122.048589,37.414869]
      gcs_location:
        type: Point
        coordinates: [-122.048589,37.414869]
      operation_volumes:
      - ordinal: 1
        near_structure: false
        effective_time_begin: "2017-10-04T09:15:40.727Z"
        effective_time_end: "2017-10-04T09:25:40.727Z"
        actual_time_end: "2017-10-04T09:25:40.727Z"
        conformance_time_begin: "2017-10-04T09:14:40.727Z"
        conformance_time_end: "2017-10-04T09:26:40.727Z"
        min_altitude_wgs84_ft: 0.0
        max_altitude_wgs84_ft: 300.0
        conform_min_altitude_wgs84_ft: 0.0
        conform_max_altitude_wgs84_ft: 400.0
        flight_geography:
          type: Polygon
          coordinates: [
            [
              [-122.062176579,37.40968041145],
              [-122.05187056889,37.41786527236],
              [-122.03732647634,37.41786440108],
              [-122.062176579,37.40968041145],
            ]
          ]
        conformance_geography:
          type: Polygon
          coordinates: [
            [
              [-122.06382530000002,37.40906970000],
              [-122.05094253233000,37.41930062770],
              [-122.03276206976000,37.41929920176],
              [-122.06382530000002,37.40906970000]
            ]
          ]
        beyond_visual_line_of_sight: false

  OperationVolume:
    type: object
    required:
    - ordinal
    - effective_time_begin
    - effective_time_end
    - min_altitude_wgs84_ft
    - max_altitude_wgs84_ft
    - flight_geography
    - beyond_visual_line_of_sight
    properties:
      ordinal:
        description: "This integer represents the ordering of the operation volume within the set of operation volumes. Need not be consecutive integers."
        type: integer
      near_structure:
        description: "Is this operation volume within 400' of a structure?"
        type: boolean
        default: false
      effective_time_begin:
        description: "Earliest time the operation will use the operation volume."
        type: string
        format: date-time
      effective_time_end:
        description: "Latest time the operation will done with the operation volume."
        type: string
        format: date-time
      actual_time_end:
        description: "Time that the operational volume was freed for use by other operations."
        type: string
        format: date-time
      conformance_time_begin:
        description: "Assigned by UTM System.  Time buffer before the submitted begin time."
        type: string
        format: date-time
      conformance_time_end:
        description: "Assigned by UTM System.  Time buffer after the submitted end time."
        type: string
        format: date-time
      min_altitude_wgs84_ft:
        description: "The minimum altitude for this operation in this operation volume. In WGS84 reference system using feet as units."
        type: number
        format: double
      max_altitude_wgs84_ft:
        description: "The maximum altitude for this operation in this operation volume. In WGS84 reference system using feet as units."
        type: number
        format: double
      conform_min_altitude_wgs84_ft:
        description: "The minimum altitude assigned and used by the UTM System to check vertical conformance of an operation. Based on UTM Client-provided min altitude."
        type: number
        format: double
      conform_max_altitude_wgs84_ft:
        description: "The maximum altitude assigned and used by the UTM System to check vertical conformance of an operation. Based on UTM Client-provided max altitude."
        type: number
        format: double
      flight_geography:
        # description: "A description of the operational area.  This should be the area within which the operation will remain."
        $ref: "#/definitions/Geometry"
      conformance_geography:
        # description: "A UTM-generated geography based on the flight geography. See Section 4.4.2 for discussion."
        $ref: "#/definitions/Geometry"
      beyond_visual_line_of_sight:
        description: "Describes whether the operation volume is beyond the visual line of sight of the operator."
        type: boolean

  Position:
    type: object
    required:
    - altitude_gps_wgs84_ft
    - altitude_num_gps_satellites
    - gufi
    - hdop_gps
    - location
    - time_measured
    - time_sent
    - track_ground_speed_kn
    - track_true_north_deg
    - vdop_gps
    properties:
      air_speed_source:
        type: string
        description: Required if air_speed_track_kn is submitted. No requirements
          yet on the values here, but suggestions include ESTIMATED or MEASURED.
      air_speed_track_kn:
        type: number
        format: double
        description: Air speed in relation to the direction of travel of the aircraft.
          Value may be negative.
      altitude_gps_wgs84_ft:
        type: number
        format: double
        description: The altitude as measured via a GPS device on the aircraft. Units
          in feet using the WGS84 reference system.
      altitude_num_gps_satellites:
        type: integer
        format: int32
        description: Number of satellites used in calculating the altitude_gps_wgs84_ft.
      enroute_positions_id:
        type: string
        format: uuid
        description: Each position will be assigned a UUIDv4 by the FIMS
      gufi:
        type: string
        format: uuid
        description: Each operation has an GUFI assigned upon submission. Required upon
          POSTing a new position. It is a JSON string, but conforms to the UUID version
          4 specification
      hdop_gps:
        type: number
        format: double
        description: The horizontal dilution of precision as provided by the onboard
          GPS.
      location:
        # description: "A description of the 2D location.  A Point geojson fragment."
        "$ref": "#/definitions/Point"
      time_measured:
        type: string
        format: date-time
        description: The time the position was measured. Likely the time provided with
          the GPS position reading.
      time_received:
        type: string
        format: date-time
        description: Not required for submission, assigned by the UTM System. The time
          the position was received by the UTM System.
      time_sent:
        type: string
        format: date-time
        description: The time the position was sent.
      track_ground_speed_kn:
        type: number
        format: double
        description: Ground speed int the direction of travel. Value must be >= 0.0.
          In knots.
      track_magnetic_north_deg:
        type: number
        format: double
        description: The direction of travel relative to magnetic north in degrees.
          Value must be >= 0.0 and < 360.0.
      track_true_north_deg:
        type: number
        format: double
        description: The direction of travel relative to true north in degrees. Value
          must be >= 0.0 and < 360.0.
      user_id:
        type: string
        description: Not required for submission. This field is populated based on the
          provided credentials in the HTTPS header.
      vdop_gps:
        type: number
        format: double
        description: The vertical dilultion of precision as provided by the onboard
          GPS.
    example:
      altitude_gps_wgs84_ft: 1111.111
      altitude_num_gps_satellites: 22
      air_speed_source: "MEASURED"
      gufi: "00000000-0000-4444-8888-000000000000"
      hdop_gps: 77.7
      time_measured: "2016-10-04T09:15:40.727Z"
      time_sent: "2016-10-04T09:15:40.727Z"
      time_received: "2016-10-04T09:15:42.727Z"
      track_ground_speed_kn: 33.33
      track_true_north_deg: 235.027287562664
      track_magnetic_north_deg: 237.123456789123
      vdop_gps: 88.8
      location:
        type: "Point"
        coordinates:
        - -122.05635935068132
        - 37.41436490284069

  Geometry:
    required:
      - type
    type: object
    discriminator: type
    description: "A geometry object in two dimensional space."
    properties:
      type:
        type: string
  Point:
    required:
      - coordinates
    allOf:
    - $ref: "#/definitions/Geometry"
    - type: object
      properties:
        coordinates:
          type: array
          description: Pair of longitude-latitude values. If a third element is provided for altitude, it is silently ignored.
          items:
            type: number
            format: double
    example:
      type: Point
      # Moffet Federal Airfield
      # http://bl.ocks.org/d/3410a0f498572d74972719c39382ceff
      coordinates: [-122.048589,37.414869]

  LineString:
    required:
    - coordinates
    allOf:
    - $ref: "#/definitions/Geometry"
    - type: object
      properties:
        coordinates:
          type: array
          items:
            type: array
            items:
              type: number
              format: double
    example:
      type: LineString
      coordinates: [
        # http://bl.ocks.org/d/655a22e1d3c1a85f4304a2133409d76d
        # 1st point NASA Ames Research Center
        # 2nd point 1mi bearing 45˚
        # 3rd point 1mi bearing 90˚
        [-122.06382530000002,37.4090697],
        [-122.05094253233,37.4193006277],
        [-122.03276206976,37.41929920176]
      ]

  Polygon:
    required:
    - coordinates
    allOf:
    - $ref: "#/definitions/Geometry"
    - type: object
      properties:
        coordinates:
          type: array
          items:
            type: array
            items:
              type: array
              items:
                type: number
                format: double
    example:
      type: Polygon
      coordinates: [
        # http://bl.ocks.org/d/7e0bffe48ff38444b29bbb2e7ec10032
        # outer ring
        # this is a triangle starting at NASA Ames Research Center
        # 2nd point 1mi bearing 45˚
        # 3rd point 1mi bearing 90˚
        # 4th point is same as 1st to close the polygon
        [
          [-122.06382530000002,37.40906970000],
          [-122.05094253233000,37.41930062770],
          [-122.03276206976000,37.41929920176],
          [-122.06382530000002,37.40906970000]
        ],
        # inner ring
        # 1st point is .1mi bearing 65˚ from 1st of outer ring
        # 2nd point .8mi bearing 45˚
        # 3rd point .8mi bearing 90˚
        # 4th point is same as 1st to close the polygon
        [
          [-122.062176579,37.40968041145],
          [-122.05187056889,37.41786527236],
          [-122.03732647634,37.41786440108],
          [-122.062176579,37.40968041145],
        ]
      ]

  Message:
    type: object
    discriminator: category
    required:
    - gufi
    - category
    properties:
      message_id:
        description: A UUID assigned to this message by the FIMS
        type: string
        format: uuid
      origin:
        type: string
        enum:
        - FIMS
        - CLIENT
        - MANAGER
        description: The user or process that generated this message
      user:
        description: "Populated by the UTM System.  The target user for a message from the UTM System."
        type: string
      gufi:
        description: "The assigned GUFI for the operation referenced by the message."
        type: string
        format: uuid
      category:
        type: string
        enum:
        - AlertMessage
        - IntentMessage
        - InformMessage
        - ConstraintMessage
      free_text:
        description: Any remarks or messaging that does not fit any other fields
        type: string
      sent_time:
        description: "Either the time the message was sent by the UTM System or the time it was received by the UTM System."
        type: string
        format: date-time
      ack_time:
        description: A timestamp confirming delivery to the application layer of the message receiver
        type: string
        format: date-time
    example:
      gufi: "00000000-0000-4444-8888-000000000000"
      category: "IntentMessage"
      origin: "CLIENT"
      free_text: "An intent message from a client (for example)"
      sent_time: "2016-10-04T09:15:42.727Z"
      intent_message: "CLOSE"

  AlertMessage:
    required:
    - alert_message
    - alert_severity
    - alert_text
    allOf:
    - $ref: "#/definitions/Message"
    - type: object
      properties:
        alert_message:
          type: string
          enum:
          - WEATHER
          - SECURITY
          - OPERATIONS
          - SYSTEM
          - GENERAL
        alert_severity:
          type: string
          enum:
          - WARNING
          - CRITICAL
          - EMERGENCY
        alert_text:
          type: string
          enum:
          - UNPLANNED_LANDING
          - UNCONTROLLED_LANDING
          - UA_LEAVING_DEFINED_VOLUME
          - OTHER_SEE_FREE_TEXT
        subtype:
          type: string
          enum:
          - UA_NOT_UNDER_OPERATOR_POSITIVE_CONTROL
          - LOST_NAVIGATION
          - LOST_COMMAND_AND_CONTROL
          - HIJACK
        warnings:
          description: "unused"
          type: array
          items:
            $ref: "#/definitions/Warning"
    example:
      gufi: "00000000-0000-4444-8888-000000000000"
      category: "AlertMessage"
      origin: "FIMS"
      sent_time: "2016-10-04T09:15:42.727Z"
      alert_message: "OPERATIONS"
      alert_severity: "WARNING"
      alert_text: "UA_LEAVING_DEFINED_VOLUME"
      free_text: "
        reason=RogueNearby,
        reasonDetail=nearby operation 86250f05-d89c-40cf-b932-aa8d10a426a2 in state U is lateral distance 711.45 feet and vertical danger zone envelope 600 feet;
        This alert message valid for the next 30 seconds (far lateral/far altitude),
        vehicleType=FixedWing
        vehicleModelName=Silent Falcon,
        longLat=-119.87933795058 39.69702548394,
        alt_gps_wgs84_ft=5187.3645438621,
        track_ground_speed_kn=0.77703200548507,
        track_magnetic_north_deg=null"

  IntentMessage:
    required:
    - intent_message
    allOf:
    - $ref: "#/definitions/Message"
    - type: object
      properties:
        intent_message:
          type: string
          enum:
          - ACK_NO_OPERATION
          - CANCEL
          - CLOSE
          - OTHER_SEE_FREE_TEXT
    example:
      gufi: "00000000-0000-4444-8888-000000000000"
      category: "IntentMessage"
      origin: "CLIENT"
      sent_time: "2016-10-04T09:15:42.727Z"
      intent_message: "CANCEL"

  InformMessage:
    allOf:
    - $ref: "#/definitions/Message"
    - type: object
      properties:
        inform_message:
          description: "NASA expects this list to evolve in the future."
          type: string
          enum:
          - PLAN_SUBMITTED_TOO_EARLY
          - ACCEPTED
          - AUTHORIZED
          - DENIED
          - NOTIFICATION_NOT_REQUIRED
          - AUTHORIZATION_NOT_REQUIRED
          - TERMINATED
          - CONSTRAINT_CHANGE
          - POSITION_REPORT_REQUEST_SINGLE
          - POSITION_REPORT_REQUEST_PERIODIC
          - POSITION_REPORT_REQUEST_CANCEL
          - BACK_TO_CONFORMANCE
          - USS_SYSTEM_MESSAGE
          - OTHER_SEE_FREE_TEXT
        violations:
          description: "Included with messages from the INFORM category with inform_message = DENIED."
          type: array
          items:
            $ref: "#/definitions/Violation"
        warnings:
          type: array
          items:
            $ref: "#/definitions/Warning"
    example:
      gufi: "00000000-0000-4444-8888-000000000000"
      category: "InformMessage"
      origin: "FIMS"
      free_text: "Plan DENIED. See violations field of this message for constraining violation(s) and the violating volume(s)."
      sent_time: "2016-10-04T09:15:42.727Z"
      inform_message: "DENIED"
      violations: '[
        {"type":"Operations","violating_volume":1,"constraining_volume":1,"constraining_id":"90710543-6b18-44c9-a1a6-a3ecd60d14"}
        ]'

  ConstraintMessage:
    allOf:
    - $ref: "#/definitions/Message"
    - type: object
      properties:
        constraint_geography:
          # description: "A description of the geography of the constraint."
          $ref: "#/definitions/Geometry"
        begin_time:
          description: "The time that the constraint begins. Null or no value implies infinity begin time."
          type: string
          format: date-time
        end_time:
          description: "The time that the constraint ends. Null or no value implies infinity end time."
          type: string
          format: date-time
    example:
      gufi: "*"
      category: "ConstraintMessage"
      origin: "FIMS"
      free_text: "Constraint added."
      sent_time: "2016-11-29T01:16:41.727Z"
      constraint_geography:
        type: Polygon
        coordinates: [
          [
            [-122.062176579,37.40968041145],
            [-122.05187056889,37.41786527236],
            [-122.03732647634,37.41786440108],
            [-122.062176579,37.40968041145],
          ]
        ]
      begin_time: "2016-11-29T01:16:41.727Z"
      end_time: "2016-11-30T01:16:41.727Z"

  Violation:
    type: object
    properties:
      type:
        type: string
      constraining_id:
        type: string
        format: uuid
      constraining_volume:
        type: integer
      violating_volume:
        type: integer

  Warning:
    type: object
    properties:
      warning_id:
        type: string

#externalDocs:
#  description: >

#      ### _Find out more about Swagger_

#  url: "http://swagger.io"

x-azure-api-id: "sh-1469571953760"